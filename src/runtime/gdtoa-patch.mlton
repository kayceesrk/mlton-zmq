--- gdtoa/gdtoa.h.orig	2008-07-31 18:07:23.128804424 +0200
+++ gdtoa/gdtoa.h	2008-07-31 18:09:01.333773640 +0200
@@ -39,6 +39,7 @@
 #define GDTOA_H_INCLUDED
 
 #include "arith.h"
+#include "../export.h"
 
 #ifndef Long
 #define Long long
@@ -108,42 +109,42 @@
 extern "C" {
 #endif
 
-extern char* gdtoa__dtoa  ANSI((double d, int mode, int ndigits, int *decpt,
+PRIVATE extern char* gdtoa__dtoa  ANSI((double d, int mode, int ndigits, int *decpt,
 			int *sign, char **rve));
-extern char* gdtoa__gdtoa ANSI((FPI *fpi, int be, ULong *bits, int *kindp,
+PRIVATE extern char* gdtoa__gdtoa ANSI((FPI *fpi, int be, ULong *bits, int *kindp,
 			int mode, int ndigits, int *decpt, char **rve));
-extern void gdtoa__freedtoa ANSI((char*));
-extern float  gdtoa__strtof ANSI((CONST char *, char **));
-extern double gdtoa__strtod ANSI((CONST char *, char **));
-extern int gdtoa__strtodg ANSI((CONST char*, char**, FPI*, Long*, ULong*));
-
-extern char*	gdtoa__g_ddfmt  ANSI((char*, double*, int, unsigned));
-extern char*	gdtoa__g_dfmt   ANSI((char*, double*, int, unsigned));
-extern char*	gdtoa__g_ffmt   ANSI((char*, float*,  int, unsigned));
-extern char*	gdtoa__g_Qfmt   ANSI((char*, void*,   int, unsigned));
-extern char*	gdtoa__g_xfmt   ANSI((char*, void*,   int, unsigned));
-extern char*	gdtoa__g_xLfmt  ANSI((char*, void*,   int, unsigned));
-
-extern int	gdtoa__strtoId  ANSI((CONST char*, char**, double*, double*));
-extern int	gdtoa__strtoIdd ANSI((CONST char*, char**, double*, double*));
-extern int	gdtoa__strtoIf  ANSI((CONST char*, char**, float*, float*));
-extern int	gdtoa__strtoIQ  ANSI((CONST char*, char**, void*, void*));
-extern int	gdtoa__strtoIx  ANSI((CONST char*, char**, void*, void*));
-extern int	gdtoa__strtoIxL ANSI((CONST char*, char**, void*, void*));
-extern int	gdtoa__strtord  ANSI((CONST char*, char**, int, double*));
-extern int	gdtoa__strtordd ANSI((CONST char*, char**, int, double*));
-extern int	gdtoa__strtorf  ANSI((CONST char*, char**, int, float*));
-extern int	gdtoa__strtorQ  ANSI((CONST char*, char**, int, void*));
-extern int	gdtoa__strtorx  ANSI((CONST char*, char**, int, void*));
-extern int	gdtoa__strtorxL ANSI((CONST char*, char**, int, void*));
+PRIVATE extern void gdtoa__freedtoa ANSI((char*));
+PRIVATE extern float  gdtoa__strtof ANSI((CONST char *, char **));
+PRIVATE extern double gdtoa__strtod ANSI((CONST char *, char **));
+PRIVATE extern int gdtoa__strtodg ANSI((CONST char*, char**, FPI*, Long*, ULong*));
+
+PRIVATE extern char*	gdtoa__g_ddfmt  ANSI((char*, double*, int, unsigned));
+PRIVATE extern char*	gdtoa__g_dfmt   ANSI((char*, double*, int, unsigned));
+PRIVATE extern char*	gdtoa__g_ffmt   ANSI((char*, float*,  int, unsigned));
+PRIVATE extern char*	gdtoa__g_Qfmt   ANSI((char*, void*,   int, unsigned));
+PRIVATE extern char*	gdtoa__g_xfmt   ANSI((char*, void*,   int, unsigned));
+PRIVATE extern char*	gdtoa__g_xLfmt  ANSI((char*, void*,   int, unsigned));
+
+PRIVATE extern int	gdtoa__strtoId  ANSI((CONST char*, char**, double*, double*));
+PRIVATE extern int	gdtoa__strtoIdd ANSI((CONST char*, char**, double*, double*));
+PRIVATE extern int	gdtoa__strtoIf  ANSI((CONST char*, char**, float*, float*));
+PRIVATE extern int	gdtoa__strtoIQ  ANSI((CONST char*, char**, void*, void*));
+PRIVATE extern int	gdtoa__strtoIx  ANSI((CONST char*, char**, void*, void*));
+PRIVATE extern int	gdtoa__strtoIxL ANSI((CONST char*, char**, void*, void*));
+PRIVATE extern int	gdtoa__strtord  ANSI((CONST char*, char**, int, double*));
+PRIVATE extern int	gdtoa__strtordd ANSI((CONST char*, char**, int, double*));
+PRIVATE extern int	gdtoa__strtorf  ANSI((CONST char*, char**, int, float*));
+PRIVATE extern int	gdtoa__strtorQ  ANSI((CONST char*, char**, int, void*));
+PRIVATE extern int	gdtoa__strtorx  ANSI((CONST char*, char**, int, void*));
+PRIVATE extern int	gdtoa__strtorxL ANSI((CONST char*, char**, int, void*));
 #if 1
-extern int	gdtoa__strtodI  ANSI((CONST char*, char**, double*));
-extern int	gdtoa__strtopd  ANSI((CONST char*, char**, double*));
-extern int	gdtoa__strtopdd ANSI((CONST char*, char**, double*));
-extern int	gdtoa__strtopf  ANSI((CONST char*, char**, float*));
-extern int	gdtoa__strtopQ  ANSI((CONST char*, char**, void*));
-extern int	gdtoa__strtopx  ANSI((CONST char*, char**, void*));
-extern int	gdtoa__strtopxL ANSI((CONST char*, char**, void*));
+PRIVATE extern int	gdtoa__strtodI  ANSI((CONST char*, char**, double*));
+PRIVATE extern int	gdtoa__strtopd  ANSI((CONST char*, char**, double*));
+PRIVATE extern int	gdtoa__strtopdd ANSI((CONST char*, char**, double*));
+PRIVATE extern int	gdtoa__strtopf  ANSI((CONST char*, char**, float*));
+PRIVATE extern int	gdtoa__strtopQ  ANSI((CONST char*, char**, void*));
+PRIVATE extern int	gdtoa__strtopx  ANSI((CONST char*, char**, void*));
+PRIVATE extern int	gdtoa__strtopxL ANSI((CONST char*, char**, void*));
 #else
 #define gdtoa__strtopd(s,se,x) gdtoa__strtord(s,se,1,x)
 #define gdtoa__strtopdd(s,se,x) gdtoa__strtordd(s,se,1,x)
--- gdtoa/gdtoaimp.h.orig	2008-10-04 02:33:51 +0000
+++ gdtoa/gdtoaimp.h	2008-10-04 02:34:41 +0000
@@ -503,7 +503,8 @@
 #define g__fmt g__fmt_D2A
 #define gethex gethex_D2A
 #define hexdig hexdig_D2A
-#define hexdig_init hexdig_init_D2A
+/* work around MinGW bug */
+#define hexdig_init hexdig_init_D3A
 #define hexnan hexnan_D2A
 #define hi0bits hi0bits_D2A
 #define i2b i2b_D2A
