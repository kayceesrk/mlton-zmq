<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta name="robots" content="index,nofollow">



<title>MLtonSocket - MLton Standard ML Compiler (SML Compiler)</title>
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="all" href="common.css">
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="screen" href="screen.css">
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="print" href="print.css">


<link rel="Start" href="Home">


</head>

<body lang="en" dir="ltr">

<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-833377-1";
urchinTracker();
</script>
<table bgcolor = lightblue cellspacing = 0 style = "border: 0px;" width = 100%>
  <tr>
    <td style = "
		border: 0px;
		color: darkblue; 
		font-size: 150%;
		text-align: left;">
      <a class = mltona href="Home">MLton MLTONWIKIVERSION</a>
    <td style = "
		border: 0px;
		font-size: 150%;
		text-align: center;
		width: 50%;">
      MLtonSocket
    <td style = "
		border: 0px;
		text-align: right;">
      <table cellspacing = 0 style = "border: 0px">
        <tr style = "vertical-align: middle;">
      </table>
  <tr style = "background-color: white;">
    <td colspan = 3
	style = "
		border: 0px;
		font-size:70%;
		text-align: right;">
      <a href = "Home">Home</a>
      &nbsp;<a href = "TitleIndex">Index</a>
      &nbsp;
</table>
<div id="content" lang="en" dir="ltr">

<pre class=code>
<B><FONT COLOR="#0000FF">signature</FONT></B> MLTON_SOCKET =
   <B><FONT COLOR="#0000FF">sig</FONT></B>
      <B><FONT COLOR="#0000FF">structure</FONT></B> Address:
         <B><FONT COLOR="#0000FF">sig</FONT></B>
            <B><FONT COLOR="#A020F0">type</FONT></B><B><FONT COLOR="#228B22"> t </FONT></B>=<B><FONT COLOR="#228B22"> NetHostDB.in_addr
         </FONT></B><B><FONT COLOR="#0000FF">end</FONT></B>
      <B><FONT COLOR="#0000FF">structure</FONT></B> Ctl:
         <B><FONT COLOR="#0000FF">sig</FONT></B>
            <B><FONT COLOR="#A020F0">val</FONT></B> getERROR: ('af, 'sock_type) Socket.sock -&gt; (string * Posix.Error.syserror option) option
         <B><FONT COLOR="#0000FF">end</FONT></B>
      <B><FONT COLOR="#0000FF">structure</FONT></B> Host:
         <B><FONT COLOR="#0000FF">sig</FONT></B>
            <B><FONT COLOR="#A020F0">type</FONT></B><B><FONT COLOR="#228B22"> t </FONT></B>=<B><FONT COLOR="#228B22"> {name: string}

            </FONT></B><B><FONT COLOR="#A020F0">val</FONT></B> getByAddress: Address.t -&gt; t option
            <B><FONT COLOR="#A020F0">val</FONT></B> getByName: string -&gt; t option
         <B><FONT COLOR="#0000FF">end</FONT></B>
      <B><FONT COLOR="#0000FF">structure</FONT></B> Port:
         <B><FONT COLOR="#0000FF">sig</FONT></B>
            <B><FONT COLOR="#A020F0">type</FONT></B><B><FONT COLOR="#228B22"> t </FONT></B>=<B><FONT COLOR="#228B22"> int
         </FONT></B><B><FONT COLOR="#0000FF">end</FONT></B>

      <B><FONT COLOR="#A020F0">type</FONT></B><B><FONT COLOR="#228B22"> t

      </FONT></B><B><FONT COLOR="#A020F0">val</FONT></B> accept: t -&gt; Address.t * Port.t * TextIO.instream * TextIO.outstream
      <B><FONT COLOR="#A020F0">val</FONT></B> connect: string * Port.t -&gt; TextIO.instream * TextIO.outstream
      <B><FONT COLOR="#A020F0">val</FONT></B> listen: unit -&gt; Port.t * t
      <B><FONT COLOR="#A020F0">val</FONT></B> listenAt: Port.t -&gt; t
      <B><FONT COLOR="#A020F0">val</FONT></B> shutdownRead: TextIO.instream -&gt; unit
      <B><FONT COLOR="#A020F0">val</FONT></B> shutdownWrite: TextIO.outstream -&gt; unit

      <B><FONT COLOR="#A020F0">val</FONT></B> fdToSock: Posix.FileSys.file_desc -&gt; ('a, 'b) Socket.sock
   <B><FONT COLOR="#0000FF">end</FONT></B>
</PRE>
<p>
 
</p>
<p>
This module contains a bare minimum of functionality to do TCP/IP programming.  This module is implemented on top of the <tt>Socket</tt> module of the <a href="BasisLibrary">Basis Library</a>.  We encourage you to use the standard <tt>Socket</tt> module, since <tt>MLton.Socket</tt> is deprecated. 
</p>

    <ul>

    <li>
<p>
 <tt>type&nbsp;Address.t</tt>  <br>
the type of IP addresses. 
</p>
</li>
    <li class="gap">
<p>
 <tt>Ctl.getERROR&nbsp;s</tt>  <br>
like the Basis Library's <tt>Socket.Ctl.getERROR</tt>, except that it  returns more information.  <tt>NONE</tt> means that there was no error,  and <tt>SOME</tt> means that there was an error, and provides the error  message and error code, if any. 
</p>
</li>
    <li class="gap">
<p>
 <tt>Host.getByAddress&nbsp;a</tt>  <br>
looks up the hostname (using <tt>gethostbyaddr</tt>) corresponding to  <tt>a</tt>. 
</p>
</li>
    <li class="gap">
<p>
 <tt>Host.getByName&nbsp;s</tt>  <br>
looks up the hostname (using <tt>gethostbyname</tt>) corresponding to  <tt>s</tt>.  
</p>
</li>
    <li class="gap">
<p>
 <tt>type&nbsp;Port.t</tt>  <br>
the type of TCP ports. 
</p>
</li>
    <li class="gap">
<p>
 <tt>type&nbsp;t</tt>  <br>
the type of sockets. 
</p>
</li>
    <li class="gap">
<p>
 <tt>accept&nbsp;s</tt>  <br>
accepts a connection on socket <tt>s</tt> and return the address port of  the connecting socket, as well as streams corresponding to the  connection. 
</p>
</li>
    <li class="gap">
<p>
 <tt>connect&nbsp;(h,&nbsp;p)</tt>  <br>
connects to host <tt>h</tt> on port <tt>p</tt>, returning the streams  corresponding to the connection. 
</p>
</li>
    <li class="gap">
<p>
 <tt>listen&nbsp;()</tt>  <br>
listens to a port chosen by the system.  Returns the port and the  socket. 
</p>
</li>
    <li class="gap">
<p>
 <tt>listenAt&nbsp;p</tt>  <br>
listens to port <tt>p</tt>.  Returns the socket. 
</p>
</li>
    <li class="gap">
<p>
 <tt>shutdownRead&nbsp;ins</tt>  <br>
causes the read part of the socket associated with <tt>ins</tt> to be  shutdown.  
</p>
</li>
    <li class="gap">
<p>
 <tt>shutdownWrite&nbsp;out</tt>  <br>
causes the write part of the socket associated with <tt>out</tt> to be  shutdown.  
</p>
</li>
    <li class="gap">
<p>
 <tt>fdToSock&nbsp;fd</tt>  <br>
coerces a file descriptor to a socket. 
</p>
</li>
</ul>

</div>



<p>
<hr>
Last edited on 2007-08-23 03:45:24 by <span title="c-71-57-91-146.hsd1.il.comcast.net"><a href="MatthewFluet">MatthewFluet</a></span>.
</body></html>
